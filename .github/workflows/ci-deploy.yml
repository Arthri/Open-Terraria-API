name: Deploy NuGet

on:
  push:
    branches: [ release ]
  pull_request:
    branches: [ release ]

jobs:
  build:

    runs-on: ubuntu-latest
    environment: CI

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.100
    - name: MonoMod dev build
      run: dotnet nuget add source https://pkgs.dev.azure.com/MonoMod/MonoMod/_packaging/DevBuilds%40Local/nuget/v3/index.json -n DevBuilds@Local
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build ModFramework.sln --configuration Release --no-restore
    - name: Test
      run: dotnet test --no-build --verbosity normal

    # Publish
    - name: Push ModFramework
      uses: rohith/publish-nuget@v2
      with:
        PROJECT_FILE_PATH: ModFramework/ModFramework.csproj
        NUGET_KEY: ${{secrets.NUGET_API_KEY}}
        VERSION_REGEX: ^\s*<PackageVersion>(.*)<\/PackageVersion>\s*$
    - name: Push ModFramework.Modules.CSharp
      uses: rohith/publish-nuget@v2
      with:
        PROJECT_FILE_PATH: ModFramework.Modules.CSharp/ModFramework.Modules.CSharp.csproj
        NUGET_KEY: ${{secrets.NUGET_API_KEY}}
        VERSION_REGEX: ^\s*<PackageVersion>(.*)<\/PackageVersion>\s*$
    - name: Push ModFramework.Modules.ClearScript
      uses: rohith/publish-nuget@v2
      with:
        PROJECT_FILE_PATH: ModFramework.Modules.ClearScript/ModFramework.Modules.ClearScript.csproj
        NUGET_KEY: ${{secrets.NUGET_API_KEY}}
        VERSION_REGEX: ^\s*<PackageVersion>(.*)<\/PackageVersion>\s*$
    - name: Push ModFramework.Modules.Lua
      uses: rohith/publish-nuget@v2
      with:
        PROJECT_FILE_PATH: ModFramework.Modules.Lua/ModFramework.Modules.Lua.csproj
        NUGET_KEY: ${{secrets.NUGET_API_KEY}}
        VERSION_REGEX: ^\s*<PackageVersion>(.*)<\/PackageVersion>\s*$
